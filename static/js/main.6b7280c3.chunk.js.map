{"version":3,"sources":["components/Search/SearchBar.js","components/Gallery/ShareButton.js","Store/Actions/types.js","components/Gallery/GifCard.js","Store/Actions/index.js","components/Gallery/Modal.js","components/Gallery/Item.js","components/Gallery/List.js","utils/useDebounce.js","components/Search/SearchPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Favorites/FavoritesPage.js","components/Navigation/BottomNavBar.js","components/Login/LogoutButton.js","components/Login/LoginButton.js","components/Navigation/TopAppBar.js","components/Alert/AlertTypes.js","components/Alert/AlertMessage.js","App.js","serviceWorker.js","Store/Reducers/authReducer.js","Store/Reducers/favoriteReducer.js","Store/Reducers/rootReducer.js","index.js"],"names":["useStyles","makeStyles","theme","input","display","fontSize","height","margin","textAlign","width","SearchBar","props","classes","className","onChange","popover","background","share","ShareButton","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","url","IconButton","aria-label","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","backgroundColor","boxShadow","FacebookShareButton","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","root","maxWidth","media","connect","state","user","auth","favorites","dispatch","addFavorite","item","type","types","removeFavorite","data","console","log","title","date","images","originalSrc","hasOwnProperty","isFavorite","setFavorite","username","avatar_url","profile_url","gifUser","downsized","Card","href","target","rel","CardMedia","image","CardHeader","avatar","Avatar","alt","src","subheader","CardActions","disableSpacing","modal","alignItems","justifyContent","paper","palette","border","shadows","padding","spacing","TransitionsModal","handleClose","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Item","handleOpen","setState","this","forwardedRef","divStyle","imgData","ref","React","Component","forwardRef","List","gifs","imageRenderer","useCallback","index","photo","length","photos","renderImage","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchBar","list","gifsInit","withRouter","setGifs","searchTerm","setSearchTerm","limit","batch","setBatch","loading","setLoading","debouncedSearchTerm","callApi","mainQuery","searchTermParam","apiKeyParam","process","replace","limitParam","offsetParam","getUrl","fetch","then","response","json","results","map","import_datetime","fixed_height","parseFloat","concat","catch","e","observer","useRef","lastElementRefCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","Divider","variant","ProtectedRoute","component","isAuthenticated","rest","render","to","favoriteGifs","Object","values","position","bottom","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","label","icon","Link","logout","Button","color","window","gapi","load","auth2","init","client_id","signOut","handleLogout","history","push","LoginButton","initGoogle","func","onSuccess","res","login","handleLoginSuccess","profile","getBasicProfile","email","getEmail","name","getName","getImageUrl","signin2","scope","longtitle","onsuccess","onfailure","handleLoginFailure","loginUser","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","fontStyle","fontWeight","text","isSignedIn","loginHandlers","authComponent","Grid","xs","CssBaseline","AppBar","Toolbar","justify","container","Typography","AlertMessage","alertType","Alert","severity","createMuiTheme","typography","fontFamily","alertFlag","setAlertFlag","alertTypes","setAlertType","ThemeProvider","googleUser","exact","path","SearchPage","FavoritesPage","Snackbar","autoHideDuration","location","hostname","match","initState","authReducer","action","favoriteReducer","userFavorites","otherUsers","otherFavorites","rootReducer","combineReducers","localStorage","getItem","JSON","parse","store","createStore","subscribe","getState","setItem","stringify","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6b7280c3.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: \"block\",\n    fontSize: \"22px\",\n    height: \"50px\",\n    margin: \"0 auto\",\n    textAlign: \"center\",\n    width: \"50%\",\n  },\n}));\n\nconst SearchBar = (props) => {\n  const classes = useStyles();\n  return <input className={classes.input} onChange={props.onChange}></input>;\n};\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  FacebookIcon,\n  RedditIcon,\n  TelegramIcon,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nconst useStyles = makeStyles(() => ({\n  popover: {\n    background: \"transparent\",\n  },\n  share: {\n    margin: \"10px\",\n  },\n}));\n\nconst ShareButton = (props) => {\n  // Share button functions\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const { url } = props;\n  const classes = useStyles();\n  return (\n    <div>\n      <IconButton aria-label=\"share\" onClick={handleClick}>\n        <ShareIcon />\n      </IconButton>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n        PaperProps={{\n          style: {\n            backgroundColor: \"transparent\",\n            boxShadow: \"none\",\n          },\n        }}\n      >\n        <div>\n          <FacebookShareButton url={url}>\n            <FacebookIcon className={classes.popover} size={32} round={true} />\n          </FacebookShareButton>\n          <TwitterShareButton url={url}>\n            <TwitterIcon size={32} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton url={url}>\n            <RedditIcon size={32} round={true} />\n          </RedditShareButton>\n          <WhatsappShareButton url={url}>\n            <WhatsappIcon size={32} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton url={url}>\n            <TelegramIcon size={32} round={true} />\n          </TelegramShareButton>\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ShareButton;\n","export default {\n  ADD_SEARCH_RESULTS: \"ADD_SEARCH_RESULTS\",\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n  ADD_FAVORITE: \"ADD_FAVORITE\",\n  REMOVE_FAVORITE: \"REMOVE_FAVORITE\",\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nimport { connect } from \"react-redux\";\nimport ShareButton from \"./ShareButton\";\nimport { Avatar } from \"@material-ui/core\";\nimport { addFavorite, removeFavorite } from \"../../Store/Actions\";\n\n// Styling for gif card contents\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    maxWidth: \"80%\",\n    width: props.width,\n  }),\n  media: (props) => ({\n    height: props.height,\n    width: props.width,\n  }),\n}));\n\nconst GifCard = (props) => {\n  const { data, user, favorites } = props;\n  console.log(data);\n\n  const { title, date, images, originalSrc } = data;\n\n  const [isFavorite, setFavorite] = useState(\n    favorites.hasOwnProperty(originalSrc)\n  );\n\n  console.log(favorites);\n  console.log(originalSrc);\n  console.log(isFavorite);\n\n  //TODO: might want to refactor this to save to redux state (which is configured to then save to local storage)\n  const addFavorite = () => {\n    console.log(\"add fav\");\n    if (isFavorite) {\n      return;\n    }\n    props.addFavorite(user, data);\n    setFavorite(true);\n  };\n\n  const removeFavorite = () => {\n    console.log(\"remove fav\");\n    if (!isFavorite) {\n      return;\n    }\n    props.removeFavorite(user, data);\n    setFavorite(false);\n  };\n\n  const favoriteIcon = () => {\n    if (isFavorite) {\n      return (\n        <IconButton aria-label=\"favorited\" onClick={removeFavorite}>\n          <FavoriteIcon />\n        </IconButton>\n      );\n    }\n    return (\n      <IconButton aria-label=\"add to favorites\" onClick={addFavorite}>\n        <FavoriteBorderIcon />\n      </IconButton>\n    );\n  };\n\n  // Gif may not have upload user in data returned from API\n  const gifUser = data.user;\n  let username, avatar_url, profile_url;\n  if (gifUser) {\n    username = gifUser.username;\n    avatar_url = gifUser.avatar_url;\n    profile_url = gifUser.profile_url;\n  } else {\n    username = \"\";\n    avatar_url = \"/default_avatar.png\";\n    profile_url = \"\";\n  }\n\n  const { url } = images.downsized;\n\n  const classes = useStyles({\n    height: data.height,\n    width: data.width,\n  });\n\n  return (\n    <Card className={classes.root}>\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <CardMedia className={classes.media} image={url} />\n      </a>\n      <CardHeader\n        avatar={\n          <a href={profile_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Avatar aria-label=\"avatar\" alt={username} src={avatar_url} />\n          </a>\n        }\n        title={\n          <div>\n            <div>{title}</div>\n            <div>{username}</div>\n          </div>\n        }\n        subheader={date}\n      />\n      <CardActions disableSpacing>\n        {favoriteIcon()}\n        <ShareButton url={url} />\n      </CardActions>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { user } = state.auth;\n  return {\n    user: user,\n    favorites: state.favorites[user] ? state.favorites[user] : {},\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFavorite: (user, item) => dispatch(addFavorite(user, item)),\n    removeFavorite: (user, item) => dispatch(removeFavorite(user, item)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GifCard);\n","import types from \"./types\";\n\n/**\n * Login action creator\n * @param {User returned from gapi onSuccess call} loginUser\n */\nexport const login = (loginUser) => {\n  return {\n    type: types.LOGIN,\n    user: loginUser,\n  };\n};\n\n/**\n * Logout action creator\n */\nexport const logout = () => {\n  return {\n    type: types.LOGOUT,\n  };\n};\n\nexport const addFavorite = (user, item) => {\n  return {\n    type: types.ADD_FAVORITE,\n    user: user,\n    item: item,\n  };\n};\n\nexport const removeFavorite = (user, item) => {\n  return {\n    type: types.REMOVE_FAVORITE,\n    user: user,\n    item: item,\n  };\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport GifCard from \"./GifCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst TransitionsModal = (props) => {\n  const { open, handleClose, data } = props;\n  const classes = useStyles();\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <GifCard className={classes.paper} data={data} />\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TransitionsModal;\n","import React from \"react\";\nimport TransitionsModal from \"./Modal\";\n\n// Item is a class because we are using refs to get the underlying DOM object (refer to List.js)\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { image, forwardedRef, margin } = this.props;\n    const { height, width, src, title } = image;\n    const divStyle = {\n      height: height,\n      width: width,\n      margin: margin,\n    };\n    const imgData = { height, width, src };\n    return (\n      <>\n        <div ref={forwardedRef} style={divStyle}>\n          <img {...imgData} alt={title} onClick={this.handleOpen} />\n        </div>\n        <TransitionsModal\n          open={this.state.open}\n          handleClose={this.handleClose}\n          data={image}\n        />\n      </>\n    );\n  }\n}\n\nexport default React.forwardRef((props, ref) => {\n  return <Item {...props} forwardedRef={ref} />;\n});\n","import React, { useCallback } from \"react\";\nimport Item from \"./Item\";\nimport Gallery from \"react-photo-gallery\";\n\nconst List = (props) => {\n  const { gifs, forwardedRef } = props;\n\n  const imageRenderer = useCallback(({ index, photo }) => {\n    // NOTE: photo height and width here is different from the one from API call because\n    // Gallery modifies it before passing it into this callback\n    const margin = \"1px\";\n    if (index === gifs.length - 1) {\n      return (\n        <Item index={index} image={photo} margin={margin} ref={forwardedRef} />\n      );\n    }\n    return <Item index={index} image={photo} margin={margin} />;\n  });\n\n  return (\n    <div>\n      <Gallery photos={gifs} renderImage={imageRenderer} />\n      <div id=\"page-bottom-boundary\" style={{ border: \"1px solid red\" }}></div>\n    </div>\n  );\n};\n\nexport default React.forwardRef((props, ref) => {\n  return <List {...props} forwardedRef={ref} />;\n});\n","import { useState, useEffect } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      return () => {\n        console.log(\"clean up\");\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport List from \"../Gallery/List\";\nimport { makeStyles, Divider } from \"@material-ui/core\";\nimport useDebounce from \"../../utils/useDebounce\";\n\nconst apiKey = process.env.REACT_APP_GIPHY_APIKEY;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"3em auto\",\n    width: \"90%\",\n  },\n  searchBar: {\n    margin: theme.spacing(3, 2),\n  },\n  list: {\n    margin: theme.spacing(2),\n  },\n}));\n\n/**\n * Constants used for search\n */\nconst gifsInit = [];\nconst searchTermInit = \"\";\nconst limitInit = 10;\nconst batchInit = 0;\nconst loadingInit = false;\nconst delay = 250;\n\nconst SearchPage = () => {\n  const [gifs, setGifs] = useState(gifsInit);\n  const [searchTerm, setSearchTerm] = useState(searchTermInit);\n  const [limit, _] = useState(limitInit);\n  const [batch, setBatch] = useState(batchInit);\n  const [loading, setLoading] = useState(loadingInit);\n\n  // Debounce the search term so it only gets updated after some delay (ms)\n  const debouncedSearchTerm = useDebounce(searchTerm, delay);\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const fetchMoreResults = () => {\n    setBatch(batch + 1);\n  };\n\n  const getUrl = () => {\n    const apiKeyParam = `?api_key=${apiKey}`;\n\n    let mainQuery;\n    let searchTermParam;\n    if (searchTerm === \"\") {\n      mainQuery = \"trending\";\n      searchTermParam = \"\";\n    } else {\n      mainQuery = \"search\";\n      searchTermParam = `&q=${searchTerm.replace(/\\s/g, \"+\")}`;\n    }\n\n    const limitParam = `&limit=${limit}`;\n    const offsetParam = `&offset=${batch * limit}`;\n\n    return `https://api.giphy.com/v1/gifs/${mainQuery}${apiKeyParam}${searchTermParam}${limitParam}${offsetParam}`;\n  };\n\n  const callApi = () => {\n    const url = getUrl();\n    console.log(url);\n\n    setLoading(true);\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        const results = data.data.map((data) => {\n          const { user, title, import_datetime, images } = data;\n          const { height, width, url } = images.fixed_height;\n          return {\n            user,\n            title,\n            date: import_datetime,\n            images,\n            height: parseFloat(height),\n            width: parseFloat(width),\n            src: url,\n            originalSrc: data.url,\n          };\n        });\n        setGifs((gifs) => gifs.concat(results));\n        setLoading(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  // Reset gifs and batch number and call API if search term changes\n  useEffect(() => {\n    setGifs(gifsInit);\n    setBatch(batchInit);\n    callApi();\n  }, [debouncedSearchTerm]);\n\n  // Call API if batch number changes to value other than batchInit\n  // Reason for checking batch === batchInit is because search term change\n  // triggers batch change to batchInit value\n  useEffect(() => {\n    if (batch === batchInit) {\n      return;\n    }\n    callApi();\n  }, [batch]);\n\n  // Infinite scroll\n  const observer = useRef();\n  const lastElementRefCallback = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new IntersectionObserver(\n        (entries) => {\n          // If the last displayed item is not visible, return\n          if (!entries[0].isIntersecting) {\n            console.log(\"Last element not visible\");\n            return;\n          }\n          console.log(`Last element visible`);\n          fetchMoreResults();\n          // observer.current.unobserve(element);\n        },\n        { threshold: 1.0 }\n      );\n\n      if (node) observer.current.observe(node);\n    },\n    [loading]\n  );\n\n  // Rendering\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.searchBar}>\n        <SearchBar onChange={handleSearchChange} />\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.list}>\n        <List\n          className={classes.root}\n          gifs={gifs}\n          ref={lastElementRefCallback}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SearchPage);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated = false,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to={\"/\"} />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport List from \"../Gallery/List\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"5em auto\",\n    width: \"90%\",\n  },\n}));\n\nconst FavoritesPage = (props) => {\n  const favoriteGifs = Object.values(props.favorites);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <List gifs={favoriteGifs} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { user } = state.auth;\n  return {\n    favorites: state.favorites[user] ? state.favorites[user] : {},\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FavoritesPage));\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n});\n\nconst BottomNavBar = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        label=\"Trending\"\n        icon={<RestoreIcon />}\n        component={Link}\n        to={\"/\"}\n      />\n      <BottomNavigationAction\n        label=\"Favorites\"\n        icon={<FavoriteIcon />}\n        component={Link}\n        to={\"/favorites\"}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default withRouter(BottomNavBar);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../Store/Actions/index\";\n\n// function HideOnScroll(props) {\n//   const { children } = props;\n//   const trigger = useScrollTrigger();\n\n//   return (\n//     <Slide appear={false} direction=\"down\" in={!trigger}>\n//       {children}\n//     </Slide>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\n// TODO: Prevent auto-authorization of previous user - may need to revoke previous user token?\nconst LogoutButton = (props) => {\n  const classes = useStyles();\n\n  const onClick = () => {\n    window.gapi.load(\"auth2\", () => {\n      console.log(\"loaded gapi\");\n      const auth2 = window.gapi.auth2.init({\n        client_id: `${process.env.REACT_APP_GOOGLE_CLIENTID}`,\n      });\n      auth2.then(() => {\n        console.log(\"auth2 fully initialized\");\n        auth2.signOut().then(() => {\n          console.log(\"after signout from gapi\");\n          auth2.disconnect();\n          props.logout();\n          props.handleLogout();\n          props.history.push(\"/\");\n        });\n      });\n    });\n  };\n\n  return (\n    <Button\n      className={classes.root}\n      size=\"small\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      Logout\n    </Button>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(LogoutButton));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../Store/Actions\";\nimport { withRouter } from \"react-router-dom\";\n\nconst GOOGLE_BUTTON_ID = \"google-login\";\n\n/**\n * LoginButton dispatches a login action upon clicking\n */\nclass LoginButton extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"auth2\", () => {\n      window.gapi.auth2\n        .init({\n          client_id: `${process.env.REACT_APP_GOOGLE_CLIENTID}`,\n        })\n        .then(() => {\n          window.gapi.signin2.render(GOOGLE_BUTTON_ID, {\n            scope: \"profile email\",\n            longtitle: false,\n            theme: \"light\",\n            onsuccess: this.onSuccess,\n            onfailure: this.props.handleLoginFailure,\n          });\n        });\n    });\n  }\n\n  initGoogle = (func) => {};\n\n  onSuccess = (res) => {\n    const { login, handleLoginSuccess } = this.props;\n    const profile = res.getBasicProfile();\n    const user = {\n      email: profile.getEmail(),\n      name: profile.getName(),\n      avatar: profile.getImageUrl(),\n    };\n    login(user);\n    handleLoginSuccess();\n  };\n\n  render() {\n    return <div id={GOOGLE_BUTTON_ID} />;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (loginUser) => dispatch(login(loginUser)),\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginButton));\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport LogoutButton from \"../Login/LogoutButton\";\nimport { Grid, Avatar, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport LoginButton from \"../Login/LoginButton\";\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontStyle: \"italic\",\n    fontWeight: 700,\n  },\n  text: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  auth: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst TopAppBar = (props) => {\n  const classes = useStyles();\n  const { isSignedIn, user, handleLogout, ...loginHandlers } = props;\n  console.log(user.avatar);\n  const authComponent = isSignedIn ? (\n    <>\n      <Grid item xs={1} className={classes.auth}>\n        <Avatar aria-label=\"avatar\" src={user.avatar} />\n      </Grid>\n      <Grid item xs={1} className={classes.auth}>\n        <LogoutButton handleLogout={handleLogout} />\n      </Grid>\n    </>\n  ) : (\n    <LoginButton {...loginHandlers} />\n  );\n\n  return (\n    <>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar position=\"sticky\" color=\"white\">\n          <Toolbar>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container\n              spacing={0}\n            >\n              <Grid item xs={2} className={classes.text}>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                  Powered by GIPHY\n                </Typography>\n              </Grid>\n\n              <Grid item xs={8} className={classes.text}>\n                <Typography\n                  type=\"title\"\n                  color=\"inherit\"\n                  className={classes.title}\n                >\n                  G I F S !\n                </Typography>\n              </Grid>\n              {authComponent}\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state.auth;\n};\n\nexport default connect(mapStateToProps, null)(TopAppBar);\n","export default {\n  LOGIN_SUCCESS: \"SUCCESS\",\n  LOGIN_FAILURE: \"FAILURE\",\n  LOGOUT: \"LOGOUT\",\n  NONE: \"NONE\",\n};\n","import React from \"react\";\nimport types from \"./AlertTypes\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst AlertMessage = (props) => {\n  const { alertType, handleClose } = props;\n  switch (alertType) {\n    case types.LOGIN_SUCCESS:\n      return (\n        <Alert onClose={handleClose} severity=\"success\">\n          Login success!\n        </Alert>\n      );\n    case types.LOGIN_FAILURE:\n      return (\n        <Alert onClose={handleClose} severity=\"error\">\n          Error logging in, please try again later\n        </Alert>\n      );\n    case types.LOGOUT:\n      return (\n        <Alert onClose={handleClose} severity=\"success\">\n          Logout success!\n        </Alert>\n      );\n    default:\n      return <div></div>;\n  }\n};\n\nexport default AlertMessage;\n","import React, { useState, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SearchPage from \"./components/Search/SearchPage\";\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\nimport FavoritesPage from \"./components/Favorites/FavoritesPage\";\nimport BottomNavBar from \"./components/Navigation/BottomNavBar\";\nimport { connect } from \"react-redux\";\nimport TopAppBar from \"./components/Navigation/TopAppBar\";\nimport { Snackbar, createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport AlertMessage from \"./components/Alert/AlertMessage\";\nimport alertTypes from \"./components/Alert/AlertTypes\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Helvetica Neue\",\n  },\n});\n\nconst App = (props) => {\n  const [alertFlag, setAlertFlag] = useState(false);\n  const [alertType, setAlertType] = useState(alertTypes.NONE);\n\n  const handleLoginSuccess = (googleUser) => {\n    console.log(\"run handle login success\");\n    setAlertType(alertTypes.LOGIN_SUCCESS);\n    setAlertFlag(true);\n  };\n\n  const handleLoginFailure = () => {\n    console.log(\"run handle login failure\");\n\n    setAlertType(alertTypes.LOGIN_FAILURE);\n    setAlertFlag(true);\n  };\n\n  const handleLogout = () => {\n    console.log(\"run handle logout\");\n\n    setAlertType(alertTypes.LOGOUT);\n    setAlertFlag(true);\n  };\n\n  const handleClose = () => {\n    setAlertType(alertTypes.NONE);\n    setAlertFlag(false);\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <TopAppBar\n          handleLoginSuccess={handleLoginSuccess}\n          handleLoginFailure={handleLoginFailure}\n          handleLogout={handleLogout}\n        />\n        <Switch>\n          {/* <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <LoginPage\n              onSuccess={handleLoginSuccess}\n              onFailure={handleLoginFailure}\n              {...props}\n            />\n          )}\n        /> */}\n          <Route\n            exact\n            path=\"/\"\n            component={SearchPage}\n            isAuthenticated={props.isSignedIn}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/favorites\"\n            component={FavoritesPage}\n            isAuthenticated={props.isSignedIn}\n          />\n        </Switch>\n        <Snackbar\n          open={alertFlag}\n          autoHideDuration={6000}\n          onClose={handleClose}\n        >\n          <AlertMessage alertType={alertType} handleClose={handleClose} />\n        </Snackbar>\n        <BottomNavBar />\n      </ThemeProvider>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state.auth;\n};\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import types from \"../Actions/types\";\n\nconst initState = {\n  isSignedIn: false,\n  user: \"\",\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.LOGIN: {\n      console.log(\"signed in!\");\n      return {\n        ...state,\n        isSignedIn: true,\n        user: action.user,\n      };\n    }\n    case types.LOGOUT: {\n      return { ...state, ...initState };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default authReducer;\n","import types from \"../Actions/types\";\n\nconst initState = {};\n\nconst favoriteReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.ADD_FAVORITE: {\n      console.log(\"add favorite\");\n      const url = action.item.originalSrc;\n      return {\n        ...state,\n        [action.user]: {\n          ...state[action.user],\n          [url]: action.item,\n        },\n      };\n    }\n    case types.REMOVE_FAVORITE: {\n      console.log(\"remove favorite\");\n      const url = action.item.originalSrc;\n      const { [action.user]: userFavorites, ...otherUsers } = state;\n      const { [url]: favoriteToRemove, ...otherFavorites } = userFavorites;\n      return { ...otherUsers, [action.user]: otherFavorites };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default favoriteReducer;\n","import authReducer from \"./authReducer\";\nimport favoriteReducer from \"./favoriteReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  favorites: favoriteReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./Store/Reducers/rootReducer\";\n// import createSagaMiddleware from \"redux-saga\";\n\n// const sagaMiddleware = createSagaMiddleware();\n\n// const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\n// sagaMiddleware.run();\n\nconst auth = localStorage.getItem(\"auth\")\n  ? JSON.parse(localStorage.getItem(\"auth\"))\n  : undefined;\n\nconst favorites = localStorage.getItem(\"favorites\")\n  ? JSON.parse(localStorage.getItem(\"favorites\"))\n  : undefined;\n\nconsole.log(favorites);\n\nconst saveUser = () => {\n  const auth = store.getState().auth;\n  const favorites = store.getState().favorites;\n  localStorage.setItem(\"auth\", JSON.stringify(auth));\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n};\n\nconst store = createStore(rootReducer, {\n  auth: auth,\n  favorites: favorites,\n});\nstore.subscribe(saveUser);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}