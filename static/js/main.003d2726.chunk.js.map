{"version":3,"sources":["components/Search/SearchBar.js","components/Gallery/ShareButton.js","Store/Actions/types.js","Store/Actions/index.js","components/Alert/AlertTypes.js","components/Gallery/GifCard.js","components/Gallery/Modal.js","components/Gallery/Item.js","components/Gallery/MasonryVirtualized.js","components/Gallery/List.js","utils/useDebounce.js","components/Search/SearchPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Favorites/FavoritesPage.js","components/Navigation/BottomNavBar.js","components/Login/LogoutButton.js","components/Login/LoginButton.js","components/Navigation/TopAppBar.js","components/Alert/AlertMessage.js","components/Alert/AlertSystem.js","App.js","serviceWorker.js","Store/Reducers/authReducer.js","Store/Reducers/favoriteReducer.js","Store/Reducers/alertReducer.js","Store/Reducers/rootReducer.js","Store/store.js","index.js"],"names":["useStyles","makeStyles","theme","input","display","margin","width","SearchBar","props","classes","TextField","className","id","label","placeholder","variant","onChange","InputProps","startAdornment","InputAdornment","position","popover","background","share","ShareButton","useState","anchorEl","setAnchorEl","open","Boolean","undefined","url","IconButton","aria-label","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","backgroundColor","boxShadow","FacebookShareButton","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","alert","alertType","type","types","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGIN_PROMPT","NONE","root","maxWidth","media","height","connect","state","auth","user","isSignedIn","favorites","email","dispatch","addFavorite","item","removeFavorite","username","avatar_url","profile_url","data","title","date","images","originalSrc","hasOwnProperty","isFavorite","setFavorite","checkSignedIn","alertTypes","handleAddFavorite","handleRemoveFavorite","gifUser","downsized","Card","href","target","rel","CardMedia","image","CardHeader","avatar","Avatar","alt","src","subheader","CardActions","disableSpacing","modal","alignItems","justifyContent","paper","palette","border","shadows","padding","spacing","TransitionsModal","handleClose","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Item","handleOpen","setState","this","forwardedRef","divStyle","imgData","ref","React","Component","forwardRef","columnWidth","window","innerWidth","initState","gutterSize","overscanByPixels","windowScrollerEnabled","MasonryVirtualized","resetUponNewImages","_masonry","_cache","clearAll","_resetCellPositioner","clearCellPositions","imageRenderer","list","index","photo","photoScaled","length","key","_columnCount","CellMeasurerCache","defaultHeight","defaultWidth","fixedWidth","_cellRenderer","bind","_onResize","_renderAutoSizer","_renderMasonry","_setMasonryRef","Math","floor","_width","_calculateColumnCount","recomputeCellPositions","_cellPositioner","reset","columnCount","spacer","scrollTop","_height","_scrollTop","disableHeight","onResize","_initCellPositioner","autoHeight","cellCount","cellMeasurerCache","cellPositioner","cellRenderer","parent","datum","cache","maxHeight","createMasonryCellPositioner","PureComponent","List","memo","gifs","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchBar","marginBottom","gifsInit","withRouter","setGifs","searchTerm","setSearchTerm","limit","batch","setBatch","loading","setLoading","debouncedSearchTerm","callApi","mainQuery","searchTermParam","apiKeyParam","process","replace","limitParam","offsetParam","getUrl","console","log","fetch","then","response","json","results","map","import_datetime","fixed_width","parseFloat","concat","catch","e","observer","useRef","lastElementRefCallback","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","Divider","component","isAuthenticated","rest","render","to","favoriteGifs","Object","values","bottom","setValue","pathname","location","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","Link","logout","history","push","Button","color","gapi","load","auth2","init","client_id","signOut","LoginButton","initGoogle","func","onSuccess","res","login","profile","getBasicProfile","getEmail","name","getName","getImageUrl","signin2","scope","prompt","longtitle","onsuccess","onfailure","handleLoginFailure","loginUser","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","fontStyle","fontWeight","text","authComponent","CssBaseline","AppBar","Toolbar","Grid","justify","container","xs","Typography","AlertMessage","Alert","severity","Snackbar","None","autoHideDuration","createMuiTheme","typography","fontFamily","ThemeProvider","exact","path","SearchPage","FavoritesPage","hostname","match","authReducer","action","favoriteReducer","userFavorites","otherUsers","otherFavorites","alertReducer","rootReducer","combineReducers","localStorage","getItem","JSON","parse","store","createStore","subscribe","getState","setItem","stringify","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.003d2726.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, TextField, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: \"flex\",\n    margin: \"0 auto\",\n    width: \"50%\",\n  },\n}));\n\nconst SearchBar = (props) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.input}\n      id=\"input-with-icon-textfield\"\n      label=\"Search\"\n      placeholder=\"Trending\"\n      variant=\"outlined\"\n      onChange={props.onChange}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n    // <input\n    //   className={classes.input}\n    //   onChange={props.onChange}\n    //   placeholder=\"Trending\"\n    // ></input>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  FacebookIcon,\n  RedditIcon,\n  TelegramIcon,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nconst useStyles = makeStyles(() => ({\n  popover: {\n    background: \"transparent\",\n  },\n  share: {\n    margin: \"10px\",\n  },\n}));\n\nconst ShareButton = (props) => {\n  // Share button functions\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const { url } = props;\n  const classes = useStyles();\n  return (\n    <div>\n      <IconButton aria-label=\"share\" onClick={handleClick}>\n        <ShareIcon />\n      </IconButton>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n        PaperProps={{\n          style: {\n            backgroundColor: \"transparent\",\n            boxShadow: \"none\",\n          },\n        }}\n      >\n        <div>\n          <FacebookShareButton url={url}>\n            <FacebookIcon className={classes.popover} size={32} round={true} />\n          </FacebookShareButton>\n          <TwitterShareButton url={url}>\n            <TwitterIcon size={32} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton url={url}>\n            <RedditIcon size={32} round={true} />\n          </RedditShareButton>\n          <WhatsappShareButton url={url}>\n            <WhatsappIcon size={32} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton url={url}>\n            <TelegramIcon size={32} round={true} />\n          </TelegramShareButton>\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ShareButton;\n","export default {\n  ADD_SEARCH_RESULTS: \"ADD_SEARCH_RESULTS\",\n\n  // Auth actions\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n\n  // Favorite actions\n  ADD_FAVORITE: \"ADD_FAVORITE\",\n  REMOVE_FAVORITE: \"REMOVE_FAVORITE\",\n\n  // Alert actions\n  ALERT: \"ALERT\",\n};\n","import types from \"./types\";\n\n/**\n * Login action creator\n * @param {User returned from gapi onSuccess call} loginUser\n */\nexport const login = (loginUser) => {\n  return {\n    type: types.LOGIN,\n    user: loginUser,\n  };\n};\n\n/**\n * Logout action creator\n */\nexport const logout = () => {\n  return {\n    type: types.LOGOUT,\n  };\n};\n\nexport const addFavorite = (user, item) => {\n  return {\n    type: types.ADD_FAVORITE,\n    user: user,\n    item: item,\n  };\n};\n\nexport const removeFavorite = (user, item) => {\n  return {\n    type: types.REMOVE_FAVORITE,\n    user: user,\n    item: item,\n  };\n};\n\n/**\n * Alert message creator\n */\nexport const alert = (alertType) => {\n  return {\n    type: types.ALERT,\n    alertType: alertType,\n  };\n};\n","export default {\n  LOGIN_SUCCESS: \"SUCCESS\",\n  LOGIN_FAILURE: \"FAILURE\",\n  LOGOUT: \"LOGOUT\",\n  LOGIN_PROMPT: \"LOGIN_PROMPT\",\n  NONE: \"NONE\",\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nimport { connect } from \"react-redux\";\nimport ShareButton from \"./ShareButton\";\nimport { Avatar } from \"@material-ui/core\";\nimport { addFavorite, removeFavorite, alert } from \"../../Store/Actions\";\nimport alertTypes from \"../Alert/AlertTypes\";\n\n// Styling for gif card contents\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    maxWidth: \"80%\",\n    width: props.width,\n  }),\n  media: (props) => ({\n    height: props.height,\n    width: props.width,\n  }),\n}));\n\nconst GifCard = (props) => {\n  const {\n    data,\n    user,\n    isSignedIn,\n    favorites,\n    addFavorite,\n    removeFavorite,\n    alert,\n  } = props;\n\n  const { title, date, images, originalSrc } = data;\n\n  const [isFavorite, setFavorite] = useState(\n    favorites.hasOwnProperty(originalSrc)\n  );\n\n  const checkSignedIn = () => {\n    if (!isSignedIn) {\n      alert(alertTypes.LOGIN_PROMPT);\n      return false;\n    }\n    return true;\n  };\n\n  const handleAddFavorite = () => {\n    const canAddFavorite = checkSignedIn();\n    if (!canAddFavorite || isFavorite) {\n      return;\n    }\n    addFavorite(user.email, data);\n    setFavorite(true);\n  };\n\n  const handleRemoveFavorite = () => {\n    const canAddFavorite = checkSignedIn();\n    if (!canAddFavorite || !isFavorite) {\n      return;\n    }\n    removeFavorite(user.email, data);\n    setFavorite(false);\n  };\n\n  const favoriteIcon = () => {\n    if (isFavorite) {\n      return (\n        <IconButton aria-label=\"favorited\" onClick={handleRemoveFavorite}>\n          <FavoriteIcon />\n        </IconButton>\n      );\n    }\n    return (\n      <IconButton aria-label=\"add to favorites\" onClick={handleAddFavorite}>\n        <FavoriteBorderIcon />\n      </IconButton>\n    );\n  };\n\n  // Gif may not have upload user in data returned from API\n  const gifUser = data.user;\n  let username, avatar_url, profile_url;\n  if (gifUser) {\n    username = gifUser.username;\n    avatar_url = gifUser.avatar_url;\n    profile_url = gifUser.profile_url;\n  } else {\n    username = \"\";\n    avatar_url = \"/default_avatar.png\";\n    profile_url = \"\";\n  }\n\n  const { url } = images.downsized;\n\n  const classes = useStyles({\n    height: data.height,\n    width: data.width,\n  });\n\n  return (\n    <Card className={classes.root}>\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <CardMedia className={classes.media} image={url} />\n      </a>\n      <CardHeader\n        avatar={\n          <a href={profile_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Avatar aria-label=\"avatar\" alt={username} src={avatar_url} />\n          </a>\n        }\n        title={\n          <div>\n            <div>{title}</div>\n            <div>{username}</div>\n          </div>\n        }\n        subheader={date}\n      />\n      <CardActions disableSpacing>\n        {favoriteIcon()}\n        <ShareButton url={url} />\n      </CardActions>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { user, isSignedIn } = state.auth;\n  return {\n    user: user,\n    isSignedIn: isSignedIn,\n    favorites: state.favorites[user.email] ? state.favorites[user.email] : {},\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFavorite: (user, item) => dispatch(addFavorite(user, item)),\n    removeFavorite: (user, item) => dispatch(removeFavorite(user, item)),\n    alert: (alertType) => dispatch(alert(alertType)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GifCard);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport GifCard from \"./GifCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst TransitionsModal = (props) => {\n  const { open, handleClose, data } = props;\n  const classes = useStyles();\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <GifCard className={classes.paper} data={data} />\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TransitionsModal;\n","import React from \"react\";\nimport TransitionsModal from \"./Modal\";\n\n// Item is a class because we are using refs to get the underlying DOM object (refer to List.js)\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { image, forwardedRef, margin } = this.props;\n    const { height, width, src, title } = image;\n    const divStyle = {\n      height: height,\n      width: width,\n      margin: margin,\n    };\n    const imgData = { height, width, src };\n    return (\n      <>\n        <div ref={forwardedRef} style={divStyle}>\n          <img {...imgData} alt={title} onClick={this.handleOpen} />\n        </div>\n        <TransitionsModal\n          open={this.state.open}\n          handleClose={this.handleClose}\n          data={image}\n        />\n      </>\n    );\n  }\n}\n\nexport default React.forwardRef((props, ref) => {\n  return <Item {...props} forwardedRef={ref} />;\n});\n","/**\n * Code referenced from https://github.com/bvaughn/react-virtualized/blob/master/source/Masonry/Masonry.example.js\n * Minor adjustments needed to be made to account for new images passed through props\n */\n\nimport React from \"react\";\nimport {\n  CellMeasurer,\n  CellMeasurerCache,\n  AutoSizer,\n  WindowScroller,\n  createMasonryCellPositioner,\n  Masonry,\n} from \"react-virtualized\";\nimport Item from \"./Item\";\n\nconst columnWidth = (window.innerWidth * 0.9) / 3.5;\n\nconst initState = {\n  columnWidth: columnWidth,\n  height: 1000,\n  gutterSize: 2,\n  overscanByPixels: 0,\n  windowScrollerEnabled: true,\n};\n\nconst initColumnCount = 0;\n\nclass MasonryVirtualized extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._columnCount = initColumnCount;\n\n    this._cache = new CellMeasurerCache({\n      defaultHeight: 250,\n      defaultWidth: columnWidth,\n      fixedWidth: true,\n    });\n\n    this.state = initState;\n\n    this._cellRenderer = this._cellRenderer.bind(this);\n    this._onResize = this._onResize.bind(this);\n    this._renderAutoSizer = this._renderAutoSizer.bind(this);\n    this._renderMasonry = this._renderMasonry.bind(this);\n    this._setMasonryRef = this._setMasonryRef.bind(this);\n  }\n\n  _calculateColumnCount() {\n    const { columnWidth, gutterSize } = this.state;\n\n    this._columnCount = Math.floor(this._width / (columnWidth + gutterSize));\n  }\n\n  _onResize({ width }) {\n    this._width = width;\n\n    this._calculateColumnCount();\n    this._resetCellPositioner();\n    this._masonry.recomputeCellPositions();\n  }\n\n  _resetCellPositioner() {\n    const { columnWidth, gutterSize } = this.state;\n\n    this._cellPositioner.reset({\n      columnCount: this._columnCount,\n      columnWidth,\n      spacer: gutterSize,\n    });\n  }\n\n  /**\n   * Reset masonry if new images were fetched\n   * This is meant to be called inside `render()` as only new images will trigger the re-rendering\n   * of this entire component. In contrast, window resizing will only trigger the\n   * _renderAutoSizer() function, and scrolling will only trigger the _onResize() function.\n   */\n  resetUponNewImages = () => {\n    if (this._masonry !== undefined && this._masonry !== null) {\n      this._cache.clearAll();\n      this._resetCellPositioner();\n      this._masonry.clearCellPositions();\n    }\n  };\n\n  render() {\n    // If no images provided by props, return empty div\n    // Hacky fix; without this, sometimes Masonry still runs cellRenderer on empty list,\n    // which somehow prevents subsequent renders. Should probably open an issue on react-virtualized.\n    if (this.props.images.length === 0) {\n      return <div></div>;\n    }\n\n    this.resetUponNewImages();\n\n    const { height, overscanByPixels, windowScrollerEnabled } = this.state;\n\n    if (windowScrollerEnabled) {\n      return (\n        <WindowScroller overscanByPixels={overscanByPixels}>\n          {this._renderAutoSizer}\n        </WindowScroller>\n      );\n    } else {\n      return this._renderAutoSizer({ height });\n    }\n  }\n\n  _renderAutoSizer({ height, scrollTop }) {\n    this._height = height;\n    this._scrollTop = scrollTop;\n\n    const { overscanByPixels } = this.state;\n\n    return (\n      <AutoSizer\n        disableHeight\n        height={height}\n        onResize={this._onResize}\n        overscanByPixels={overscanByPixels}\n        scrollTop={this._scrollTop}\n      >\n        {this._renderMasonry}\n      </AutoSizer>\n    );\n  }\n\n  _renderMasonry({ width }) {\n    this._width = width;\n\n    this._calculateColumnCount();\n    this._initCellPositioner();\n\n    const { height, overscanByPixels, windowScrollerEnabled } = this.state;\n\n    return (\n      <Masonry\n        autoHeight={windowScrollerEnabled}\n        cellCount={this.props.images.length}\n        cellMeasurerCache={this._cache}\n        cellPositioner={this._cellPositioner}\n        cellRenderer={this._cellRenderer}\n        height={windowScrollerEnabled ? this._height : height}\n        overscanByPixels={overscanByPixels}\n        ref={this._setMasonryRef}\n        scrollTop={this._scrollTop}\n        width={width}\n      />\n    );\n  }\n\n  imageRenderer = (list, index, height, width) => {\n    const margin = \"1px\";\n    const photo = list[index];\n    const photoScaled = { ...photo, height: height, width: width };\n    if (index === list.length - 1) {\n      return (\n        <Item\n          index={index}\n          image={photoScaled}\n          margin={margin}\n          ref={this.props.forwardedRef}\n          key={index}\n        />\n      );\n    }\n    return (\n      <Item index={index} image={photoScaled} margin={margin} key={index} />\n    );\n  };\n\n  _cellRenderer({ index, key, parent, style }) {\n    const list = this.props.images;\n\n    // Sometimes the index can be more than the list length, return nothing in that case\n    // Might be a problem with the cell measurer cache\n    if (index >= list.length) {\n      return;\n    }\n\n    const datum = list[index];\n    // const width = this.state.columnWidth;\n    const width = style.width;\n    const height = (datum.height / datum.width) * width;\n\n    return (\n      <CellMeasurer cache={this._cache} index={index} key={key} parent={parent}>\n        <div\n          style={{\n            ...style,\n            maxHeight: height,\n            boxShadow: \"0px 0px 1px black\",\n          }}\n          key={index}\n        >\n          {this.imageRenderer(list, index, height, width)}\n        </div>\n      </CellMeasurer>\n    );\n  }\n\n  _initCellPositioner() {\n    if (typeof this._cellPositioner === \"undefined\") {\n      const { columnWidth, gutterSize } = this.state;\n\n      this._cellPositioner = createMasonryCellPositioner({\n        cellMeasurerCache: this._cache,\n        columnCount: this._columnCount,\n        columnWidth,\n        spacer: gutterSize,\n      });\n    }\n  }\n\n  _setMasonryRef(ref) {\n    this._masonry = ref;\n  }\n}\n\nexport default React.forwardRef((props, ref) => {\n  return <MasonryVirtualized {...props} forwardedRef={ref} />;\n});\n","import React from \"react\";\nimport MasonryVirtualized from \"./MasonryVirtualized\";\n\n/**\n * Wrapper for gifs display layout\n * Currently uses a virtualized masonry layout\n */\nconst List = React.memo((props) => {\n  const { gifs, forwardedRef } = props;\n\n  return (\n    <div>\n      <MasonryVirtualized images={gifs} ref={forwardedRef} />\n      <div id=\"page-bottom-boundary\" style={{ border: \"1px solid red\" }}></div>\n    </div>\n  );\n});\n\nexport default React.forwardRef((props, ref) => {\n  return <List {...props} forwardedRef={ref} />;\n});\n","import { useState, useEffect } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport List from \"../Gallery/List\";\nimport { makeStyles, Divider } from \"@material-ui/core\";\nimport useDebounce from \"../../utils/useDebounce\";\n\nconst apiKey = process.env.REACT_APP_GIPHY_APIKEY;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"3em auto\",\n    width: \"90%\",\n  },\n  searchBar: {\n    margin: theme.spacing(3, 2),\n  },\n  list: {\n    margin: theme.spacing(2),\n    marginBottom: theme.spacing(10),\n  },\n}));\n\n/**\n * Init states used for search\n */\nconst gifsInit = [];\nconst searchTermInit = \"\";\nconst limitInit = 50;\nconst batchInit = 0;\nconst loadingInit = false;\nconst delay = 250;\n\nconst SearchPage = () => {\n  const [gifs, setGifs] = useState(gifsInit);\n  const [searchTerm, setSearchTerm] = useState(searchTermInit);\n  const [limit, _] = useState(limitInit);\n  const [batch, setBatch] = useState(batchInit);\n  const [loading, setLoading] = useState(loadingInit);\n\n  // Debounce the search term so it only gets updated after some delay (ms)\n  const debouncedSearchTerm = useDebounce(searchTerm, delay);\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const fetchMoreResults = () => {\n    setBatch(batch + 1);\n  };\n\n  const getUrl = () => {\n    const apiKeyParam = `?api_key=${apiKey}`;\n\n    let mainQuery;\n    let searchTermParam;\n    if (searchTerm === \"\") {\n      mainQuery = \"trending\";\n      searchTermParam = \"\";\n    } else {\n      mainQuery = \"search\";\n      searchTermParam = `&q=${searchTerm.replace(/\\s/g, \"+\")}`;\n    }\n\n    const limitParam = `&limit=${limit}`;\n    const offsetParam = `&offset=${batch * limit}`;\n\n    return `https://api.giphy.com/v1/gifs/${mainQuery}${apiKeyParam}${searchTermParam}${limitParam}${offsetParam}`;\n  };\n\n  const callApi = () => {\n    const url = getUrl();\n    console.log(url);\n\n    setLoading(true);\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        const results = data.data.map((data) => {\n          const { user, title, import_datetime, images } = data;\n          const { height, width, url } = images.fixed_width;\n          return {\n            user,\n            title,\n            date: import_datetime,\n            images,\n            height: parseFloat(height),\n            width: parseFloat(width),\n            src: url,\n            originalSrc: data.url,\n          };\n        });\n        setGifs((gifs) => gifs.concat(results));\n        setLoading(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  // Reset gifs and batch number and call API if search term changes\n  useEffect(() => {\n    setGifs(gifsInit);\n    setBatch(batchInit);\n    callApi();\n  }, [debouncedSearchTerm]);\n\n  // Call API if batch number changes to value other than batchInit\n  // Reason for checking batch === batchInit is because search term change\n  // triggers batch change to batchInit value\n  useEffect(() => {\n    if (batch === batchInit) {\n      return;\n    }\n    callApi();\n  }, [batch]);\n\n  // Infinite scroll\n  const observer = useRef();\n  const lastElementRefCallback = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver(\n        (entries) => {\n          // If the last displayed item is not visible, return\n          if (!entries[0].isIntersecting) {\n            console.log(\"Last element not visible\");\n            return;\n          }\n          console.log(`Last element visible`);\n          fetchMoreResults();\n          // observer.current.unobserve(element);\n        },\n        { threshold: 0.1 }\n      );\n\n      if (node) observer.current.observe(node);\n    },\n    [loading]\n  );\n\n  // Rendering\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.searchBar}>\n        <SearchBar onChange={handleSearchChange} />\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.list}>\n        <List\n          className={classes.root}\n          gifs={gifs}\n          ref={lastElementRefCallback}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SearchPage);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { alert } from \"../../Store/Actions\";\nimport alertTypes from \"../Alert/AlertTypes\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated = false,\n  alert,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          alert(alertTypes.LOGIN_PROMPT);\n          return <Redirect to={\"/\"} />;\n        }\n      }}\n    />\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    alert: (alertType) => dispatch(alert(alertType)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProtectedRoute);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport List from \"../Gallery/List\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"5em auto\",\n    width: \"90%\",\n  },\n}));\n\nconst FavoritesPage = (props) => {\n  const favoriteGifs = Object.values(props.favorites);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <List gifs={favoriteGifs} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { user } = state.auth;\n  return {\n    favorites: state.favorites[user.email] ? state.favorites[user.email] : {},\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FavoritesPage));\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n});\n\nconst BottomNavBar = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  // Sets the bottom navigation based on current route location\n  const pathname = props.location.pathname;\n  if (pathname === \"/\" && value !== 0) {\n    setValue(0);\n  } else if (pathname === \"/favorites\" && value !== 1) {\n    setValue(1);\n  }\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        label=\"Trending\"\n        icon={<RestoreIcon />}\n        component={Link}\n        to={\"/\"}\n      />\n      <BottomNavigationAction\n        label=\"Favorites\"\n        icon={<FavoriteIcon />}\n        component={Link}\n        to={\"/favorites\"}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default withRouter(BottomNavBar);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { alert } from \"../../Store/Actions\";\nimport alertTypes from \"../Alert/AlertTypes\";\n\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../Store/Actions/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst LogoutButton = (props) => {\n  const classes = useStyles();\n\n  const onClick = () => {\n    window.gapi.load(\"auth2\", () => {\n      const auth2 = window.gapi.auth2.init({\n        client_id: `${process.env.REACT_APP_GOOGLE_CLIENTID}`,\n      });\n      auth2.then(() => {\n        auth2.signOut().then(() => {\n          auth2.disconnect();\n          logout();\n        });\n      });\n    });\n  };\n\n  const logout = () => {\n    const { logout, alert } = props;\n    logout();\n    alert(alertTypes.LOGOUT);\n    props.history.push(\"/\");\n  };\n\n  return (\n    <Button\n      className={classes.root}\n      size=\"small\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      Logout\n    </Button>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n    alert: (alertType) => dispatch(alert(alertType)),\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(LogoutButton));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, alert } from \"../../Store/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport alertTypes from \"../Alert/AlertTypes\";\n\nconst GOOGLE_BUTTON_ID = \"google-login\";\n\n/**\n * LoginButton dispatches a login action upon clicking\n */\nclass LoginButton extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"auth2\", () => {\n      window.gapi.auth2\n        .init({\n          client_id: `${process.env.REACT_APP_GOOGLE_CLIENTID}`,\n        })\n        .then(() => {\n          window.gapi.signin2.render(GOOGLE_BUTTON_ID, {\n            scope: \"profile email\",\n            prompt: \"consent\",\n            longtitle: false,\n            theme: \"light\",\n            onsuccess: this.onSuccess,\n            onfailure: this.props.handleLoginFailure,\n          });\n        });\n    });\n  }\n\n  initGoogle = (func) => {};\n\n  onSuccess = (res) => {\n    const { login, alert } = this.props;\n    const profile = res.getBasicProfile();\n    const user = {\n      email: profile.getEmail(),\n      name: profile.getName(),\n      avatar: profile.getImageUrl(),\n    };\n    login(user);\n    alert(alertTypes.LOGIN_SUCCESS);\n  };\n\n  render() {\n    return <div id={GOOGLE_BUTTON_ID} />;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (loginUser) => dispatch(login(loginUser)),\n    alert: (alertType) => dispatch(alert(alertType)),\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginButton));\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport LogoutButton from \"../Login/LogoutButton\";\nimport { Grid, Avatar, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport LoginButton from \"../Login/LoginButton\";\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontStyle: \"italic\",\n    fontWeight: 700,\n  },\n  text: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  auth: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n  },\n}));\n\nconst TopAppBar = (props) => {\n  const classes = useStyles();\n  const { isSignedIn, user } = props;\n  const authComponent = isSignedIn ? (\n    <>\n      <Avatar aria-label=\"avatar\" src={user.avatar} />\n      <LogoutButton />\n    </>\n  ) : (\n    <LoginButton />\n  );\n\n  return (\n    <>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar position=\"sticky\" color=\"inherit\">\n          <Toolbar>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container\n              spacing={0}\n            >\n              <Grid item xs={2} className={classes.text}>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                  Powered by GIPHY\n                </Typography>\n              </Grid>\n\n              <Grid item xs={8} className={classes.text}>\n                <Typography\n                  type=\"title\"\n                  color=\"inherit\"\n                  className={classes.title}\n                >\n                  G I F S !\n                </Typography>\n              </Grid>\n\n              <Grid item xs={2} className={classes.auth}>\n                {authComponent}\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state.auth;\n};\n\nexport default connect(mapStateToProps, null)(TopAppBar);\n","import React from \"react\";\nimport types from \"./AlertTypes\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst AlertMessage = (props) => {\n  const { alertType, handleClose } = props;\n  switch (alertType) {\n    case types.LOGIN_SUCCESS:\n      return (\n        <Alert onClose={handleClose} severity=\"success\">\n          Login success!\n        </Alert>\n      );\n    case types.LOGIN_FAILURE:\n      return (\n        <Alert onClose={handleClose} severity=\"error\">\n          Error logging in, please try again later\n        </Alert>\n      );\n    case types.LOGOUT:\n      return (\n        <Alert onClose={handleClose} severity=\"success\">\n          Logout success!\n        </Alert>\n      );\n    case types.LOGIN_PROMPT:\n      return (\n        <Alert onClose={handleClose} severity=\"error\">\n          You need to be signed in to carry out this action.\n        </Alert>\n      );\n    default:\n      return <div></div>;\n  }\n};\n\nexport default AlertMessage;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Snackbar } from \"@material-ui/core\";\nimport types from \"./AlertTypes\";\nimport AlertMessage from \"./AlertMessage\";\nimport { alert } from \"../../Store/Actions\";\n\nconst AlertSystem = (props) => {\n  const { alertType, alert } = props;\n\n  const handleClose = () => {\n    alert(types.NONE);\n  };\n\n  return (\n    <Snackbar\n      open={alertType !== types.None}\n      autoHideDuration={6000}\n      // onClose={handleClose}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n    >\n      <AlertMessage alertType={alertType} handleClose={handleClose} />\n    </Snackbar>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state.alert;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    alert: (alertType) => dispatch(alert(alertType)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertSystem);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SearchPage from \"./components/Search/SearchPage\";\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\nimport FavoritesPage from \"./components/Favorites/FavoritesPage\";\nimport BottomNavBar from \"./components/Navigation/BottomNavBar\";\nimport { connect } from \"react-redux\";\nimport TopAppBar from \"./components/Navigation/TopAppBar\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport AlertSystem from \"./components/Alert/AlertSystem\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Helvetica Neue\",\n  },\n});\n\nconst App = (props) => {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <TopAppBar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={SearchPage}\n            isAuthenticated={props.isSignedIn}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/favorites\"\n            component={FavoritesPage}\n            isAuthenticated={props.isSignedIn}\n          />\n        </Switch>\n        <AlertSystem />\n        <BottomNavBar />\n      </ThemeProvider>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state.auth;\n};\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import types from \"../Actions/types\";\n\nconst initState = {\n  isSignedIn: false,\n  user: \"\",\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.LOGIN: {\n      return {\n        ...state,\n        isSignedIn: true,\n        user: action.user,\n      };\n    }\n    case types.LOGOUT: {\n      return { ...state, ...initState };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default authReducer;\n","import types from \"../Actions/types\";\n\nconst initState = {};\n\nconst favoriteReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.ADD_FAVORITE: {\n      const url = action.item.originalSrc;\n      return {\n        ...state,\n        [action.user]: {\n          ...state[action.user],\n          [url]: action.item,\n        },\n      };\n    }\n    case types.REMOVE_FAVORITE: {\n      const url = action.item.originalSrc;\n      const { [action.user]: userFavorites, ...otherUsers } = state;\n      const { [url]: favoriteToRemove, ...otherFavorites } = userFavorites;\n      return { ...otherUsers, [action.user]: otherFavorites };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default favoriteReducer;\n","import types from \"../Actions/types\";\nimport alertTypes from \"../../components/Alert/AlertTypes\";\n\nconst initState = {\n  alertType: alertTypes.NONE,\n};\n\nconst alertReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.ALERT: {\n      return {\n        ...state,\n        alertType: action.alertType,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default alertReducer;\n","import authReducer from \"./authReducer\";\nimport favoriteReducer from \"./favoriteReducer\";\nimport alertReducer from \"./alertReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  favorites: favoriteReducer,\n  alert: alertReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducers/rootReducer\";\n\nconst auth = localStorage.getItem(\"auth\")\n  ? JSON.parse(localStorage.getItem(\"auth\"))\n  : undefined;\n\nconst favorites = localStorage.getItem(\"favorites\")\n  ? JSON.parse(localStorage.getItem(\"favorites\"))\n  : undefined;\n\nconst saveUser = () => {\n  const auth = store.getState().auth;\n  const favorites = store.getState().favorites;\n  localStorage.setItem(\"auth\", JSON.stringify(auth));\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n};\n\nconst store = createStore(rootReducer, {\n  auth: auth,\n  favorites: favorites,\n});\nstore.subscribe(saveUser);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}